/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.russianpost.siberia.monitorticket;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import ru.russianpost.siberia.monitorticket.FactoryService.REQUEST;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//ru.russianpost.siberia.monitorticket//batchmonitorform//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "batchmonitorformTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "ru.russianpost.siberia.monitorticket.batchmonitorformTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_batchmonitorformAction",
        preferredID = "batchmonitorformTopComponent"
)
@Messages({
    "CTL_batchmonitorformAction=Пакетный поиск",
    "CTL_batchmonitorformTopComponent=Пакетный поиск РПО",
    "HINT_batchmonitorformTopComponent=This is a batchmonitorform window"
})

public final class batchmonitorformTopComponent extends TopComponent {

    FactoryService fs;

    public batchmonitorformTopComponent() {
        initComponents();
        setName(Bundle.CTL_batchmonitorformTopComponent());
        setToolTipText(Bundle.HINT_batchmonitorformTopComponent());
        fs = new FactoryService(new Infotrace() {
            @Override
            public void add(String data) {
                InfoTrace.append(data);
            }
        }, new SetButtom() {
            @Override
            public void SetButtom(boolean b) {
                btFileLoad.setEnabled(b);
                btLocal.setEnabled(b);
                btDetail.setEnabled(b);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btLocal = new javax.swing.JButton();
        btFileLoad = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        InfoTrace = new javax.swing.JTextArea();
        btDetail = new javax.swing.JButton();

        setNextFocusableComponent(btFileLoad);

        org.openide.awt.Mnemonics.setLocalizedText(btLocal, org.openide.util.NbBundle.getMessage(batchmonitorformTopComponent.class, "batchmonitorformTopComponent.btLocal.text")); // NOI18N
        btLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLocalActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btFileLoad, org.openide.util.NbBundle.getMessage(batchmonitorformTopComponent.class, "batchmonitorformTopComponent.btFileLoad.text")); // NOI18N
        btFileLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFileLoadActionPerformed(evt);
            }
        });

        InfoTrace.setColumns(20);
        InfoTrace.setRows(5);
        jScrollPane2.setViewportView(InfoTrace);

        org.openide.awt.Mnemonics.setLocalizedText(btDetail, org.openide.util.NbBundle.getMessage(batchmonitorformTopComponent.class, "batchmonitorformTopComponent.btDetail.text")); // NOI18N
        btDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btDetail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btLocal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btFileLoad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btFileLoad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btLocal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDetail)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btFileLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFileLoadActionPerformed
        fs.LoadDataOfServer(REQUEST.REQ_SERVER);
    }//GEN-LAST:event_btFileLoadActionPerformed

    private void btLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLocalActionPerformed
        fs.LoadDataOfServer(REQUEST.REQ_DB);
    }//GEN-LAST:event_btLocalActionPerformed

    private void btDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDetailActionPerformed
        fs.LoadDataOfServer(REQUEST.REQ_SERVER_DB);
    }//GEN-LAST:event_btDetailActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea InfoTrace;
    private javax.swing.JButton btDetail;
    private javax.swing.JButton btFileLoad;
    private javax.swing.JButton btLocal;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        p.setProperty("version", "1.0");
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
    }
}
